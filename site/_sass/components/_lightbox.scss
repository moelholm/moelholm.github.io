@import "../variables";

// CSS-only lightbox (global)
.lightbox {
  position: fixed;
  inset: 0;                     // cover the viewport
  z-index: 10000;               // above headers etc.
  display: none;                // hidden until targeted
  align-items: center;
  justify-content: center;
  overscroll-behavior: contain; // avoid background scroll chaining
  touch-action: none;           // prevent scroll/pinch gestures bleeding through
  overflow: hidden;             // ensure no inner scroll leaks
  margin: 0;
  padding: 0;
  background: rgba(0,0,0,0.75); // single visual backdrop (no double dark)
  pointer-events: none;         // don't intercept clicks; children handle them
}
.lightbox-toggle:checked + .lightbox { display: flex; }

// Progressive enhancement: when overlay is open, prevent body scroll
// Supported in modern browsers; harmless fallback elsewhere
body:has(.lightbox-toggle:checked) {
  overflow: hidden;
}
.lightbox__backdrop {
  position: fixed;
  inset: 0;                     // single backdrop layer
  background: transparent;      // visual dark layer is on .lightbox
  cursor: pointer;
  pointer-events: auto;
}
.lightbox img {
  position: relative;
  // Leave a small viewport gutter without shrinking the backdrop
  max-width: min(calc(100vw - 4vw), 95vw);
  max-height: min(calc(100dvh - 4vh), 92vh);
  width: auto;
  height: auto;
  border-radius: 8px;
  box-shadow: 0 10px 30px rgba(0,0,0,0.35);
  z-index: 1;                   // above backdrop
}
.lightbox__close {
  position: absolute;
  top: 10px;
  right: 12px;
  color: #fff;
  font-size: 2rem;
  text-decoration: none;
  line-height: 1;
  padding: 4px 10px; // bigger tap target
  cursor: pointer;
  pointer-events: auto;
  z-index: 2;
}

// Make the image itself clickable to close
.lightbox__image { cursor: pointer; display: inline-block; pointer-events: auto; }

// Generic lightbox trigger: indicate clickability without altering site visuals
.lightbox-trigger { cursor: pointer; display: inline-block; }
